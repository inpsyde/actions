name: Test "Set up WireGuard" Action

on:
  pull_request:
    branches:
      - main
    paths:
      - 'setup-wireguard/action.yml'
  workflow_dispatch:

jobs:
  generate-config:
    name: Generate WireGuard Configuration
    runs-on: ubuntu-latest
    outputs:
      PRIVATE_KEY: ${{ steps.generate.outputs.PRIVATE_KEY }}
      SERVER_PUBLIC_KEY: ${{ steps.generate.outputs.SERVER_PUBLIC_KEY }}
      SERVER_PORT: ${{ steps.generate.outputs.SERVER_PORT }}
      INTERNAL_IP: ${{ steps.generate.outputs.INTERNAL_IP }}
    steps:
      - name: Generate WireGuard configuration
        # https://www.wireguard.com/quickstart/#demo-server
        id: generate
        run: |
          sudo apt-get update && sudo apt-get install -y wireguard-tools
          PRIVATE_KEY=$(wg genkey)
          PUBLIC_KEY=$(echo "$PRIVATE_KEY" | wg pubkey)
          exec 3<>/dev/tcp/demo.wireguard.com/42912
          echo "$PUBLIC_KEY" >&3
          IFS=: read -r STATUS SERVER_PUBLIC_KEY SERVER_PORT INTERNAL_IP <&3
          if [ "$STATUS" != "OK" ]; then
            echo "Failed to get configuration from demo server"
            exit 1
          fi
          echo "PRIVATE_KEY=${PRIVATE_KEY}" >> $GITHUB_OUTPUT
          echo "SERVER_PUBLIC_KEY=${SERVER_PUBLIC_KEY}" >> $GITHUB_OUTPUT
          echo "SERVER_PORT=${SERVER_PORT}" >> $GITHUB_OUTPUT
          echo "INTERNAL_IP=${INTERNAL_IP}" >> $GITHUB_OUTPUT

  test-valid-config:
    name: Test with Valid Configuration
    needs: generate-config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Action with Valid Configuration
        uses: ./setup-wireguard
        with:
          wireguard-configuration: |
            [Interface]
            PrivateKey = ${{ needs.generate-config.outputs.PRIVATE_KEY }}
            Address = ${{ needs.generate-config.outputs.INTERNAL_IP }}/24
            DNS = 8.8.8.8

            [Peer]
            PublicKey = ${{ needs.generate-config.outputs.SERVER_PUBLIC_KEY }}
            AllowedIPs = 0.0.0.0/0
            Endpoint = demo.wireguard.com:${{ needs.generate-config.outputs.SERVER_PORT }}
            PersistentKeepalive = 25

      - name: Verify WireGuard Connectivity
        run: |
          curl --fail http://192.168.4.1

  test-invalid-config:
    name: Test with Invalid Configuration
    needs: generate-config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Action with Invalid Configuration
        id: invalid_test
        uses: ./setup-wireguard
        with:
          wireguard-configuration: |
            [Interface]
            PrivateKey = ${{ needs.generate-config.outputs.PRIVATE_KEY }}
            Address = ${{ needs.generate-config.outputs.INTERNAL_IP }}/24
            DNS = 8.8.8.8
            PostUp = echo "This should fail"

            [Peer]
            PublicKey = ${{ needs.generate-config.outputs.SERVER_PUBLIC_KEY }}
            AllowedIPs = 0.0.0.0/0
            Endpoint = demo.wireguard.com:${{ needs.generate-config.outputs.SERVER_PORT }}
            PersistentKeepalive = 25
        continue-on-error: true

      - name: Verify Action Failure
        if: ${{ steps.invalid_test.outcome == 'failure' }}
        run: |
          echo "Test passed: action failed as expected."

      - name: Fail if Action Did Not Fail
        if: ${{ steps.invalid_test.outcome != 'failure' }}
        run: |
          echo "Test failed: action did not fail as expected."
          exit 1
